apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: yacht-test
spec:
  arguments:
    parameters:
      - name: repo
        value: https://github.com/KU-Yacht/spring-example
      - name: branch
        value: main
      - name: path
        value: .
      - name: image
        value: yacht24/spring-test:v0.0.1
  entrypoint: main
  volumeClaimTemplates:
    - metadata:
        name: work2
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 64Mi
  templates:
    - name: main
      dag:
        tasks:
          - name: clone-cdk8s
            template: clone-cdk8s
          - name: setup-node
            template: setup-node
            depends: "clone-cdk8s"
          - name: make-deploy-yaml
            template: make-deploy-yaml
            depends: "setup-node"
          - name: deploy-yaml
            template: deploy-yaml
            arguments:
              parameters:
              - name: deployment-yaml
                value: "{{tasks.make-deploy-yaml.outputs.parameters.deployment-yaml}}"
            depends: "make-deploy-yaml"
          - name: service-yaml
            template: service-yaml
            arguments:
              parameters:
                - name: service-yaml
                  value: "{{tasks.make-deploy-yaml.outputs.parameters.service-yaml}}"
            depends: "make-deploy-yaml"
    - name: clone-cdk8s
      container:
        volumeMounts:
          - mountPath: /work2
            name: work2
        image: alpine/git:v2.26.2
        workingDir: /work2
        args:
          - clone
          - --depth
          - "1"
          - --branch
          - "main"
          - --single-branch
          - "https://github.com/KU-Yacht/Yacht"
          - .
    - name: setup-node
      container:
        volumeMounts:
          - mountPath: /work2
            name: work2
        workingDir: /work2/cdk8s/backend
        image: node:latest
        command: [ sh, -c ]
        args: [ "npm install" ]
    - name: make-deploy-yaml
      container:
        volumeMounts:
          - mountPath: /work2
            name: work2
        workingDir: /work2/cdk8s/backend
        image: brennerm/cdk8s:latest
        args:
          - synth
      outputs:
        parameters:
        - name: deployment-yaml
          valueFrom:
            path: /work2/cdk8s/backend/dist/Deployment.*.k8s.yaml
        - name: service-yaml
          valueFrom:
            path: /work2/cdk8s/backend/dist/Service.*.k8s.yaml
    - name: deployment-yaml
      inputs:
        parameters:
        - name: deployment-yaml
      resource:
        action: apply
        manifest: "{{inputs.parameters.deployment-yaml}}"
    - name: service-yaml
      inputs:
        parameters:
          - name: service-yaml
      resource:
        action: apply
        manifest: "{{inputs.parameters.service-yaml}}"
